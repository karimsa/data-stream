{"version":3,"sources":["index.js","array/filter.js","array/forEach.js","array/join.js","array/map.js","array/reduce.js","math/average.js","math/probability.js","math/sum.js","utils/debounce.js","utils/distinct.js","utils/json.js","utils/pluck.js","utils/stdout.js","utils/stringify.js","utils/take.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","exports","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","Stream","require","through","merge","isStream","DataStream","_Stream","this","readable","_stream","write","bind","apply","arguments","end","stream","pipe","on","event","callback","options","fn","module","map","defer","filter","append","data","next","deferred","promise","then","cont","retval","resolve","err","reject","forEach","join","seperator","first","newData","reduce","initial","average","sum","n","num","probability","freq","events","compare",">","a","b","<","=",">=","<=","String","hasOwnProperty","sign","substr","parseFloat","prev","debounce","timeout","distinct","pass","json","JSON","parse","pluck","stdout","stringify","process","take","buffer","datum","push","tmp"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * lib/index.js - data-stream\n * Base class for data-stream.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar Stream = require('stream'),\n    through = require('through'),\n    merge = require('merge-stream'),\n    isStream = require('is-stream');\n\nclass DataStream extends Stream {\n    constructor() {\n        super();\n\n        // mark as duplex\n        this.readable = this.writable = true;\n\n        // create an underlying stream for\n        // handling the transforms\n        this._stream = through();\n\n        // maintain binding to top-most stream\n        var write = this._stream.write.bind(this._stream);\n        this.write = function () {\n            write.apply(this, arguments);\n            return this;\n        };\n\n        this.end = this._stream.end.bind(this._stream);\n\n        // for branching out\n        this.isStream = isStream;\n    }\n\n    // clone the current data-stream\n    clone() {\n        var stream = new DataStream();\n\n        stream._stream = this._stream;\n        stream.write = this.write;\n        stream.end = this.end;\n\n        return stream;\n    }\n\n    // pipe to the actual underlying stream\n    pipe(target) {\n        this._stream.pipe(target);\n        return this;\n    }\n\n    // reverse-pipe\n    source(stream) {\n        stream.pipe(this);\n        return this;\n    }\n\n    // merge with another stream\n    and(stream) {\n        this._stream = merge(this._stream, stream);\n        return this;\n    }\n\n    // for appending a new transform stream\n    append(stream) {\n        this._stream = this._stream.pipe(stream);\n        return this;\n    }\n}\n\n// proxy `.on` for 'data' event\nvar on = DataStream.prototype.on;\nDataStream.prototype.on = function (event, callback) {\n    if (event === 'data') return this._stream.on('data', callback);\n    return on.apply(this, arguments);\n};\n\n// expose constructor\nexport default (options) => new DataStream(options);\n\n// expose prototype\nexports.fn = DataStream.prototype;\n","/**\n * lib/array/filter.js - data-stream\n * Filter out unwanted stream data.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar map = require('map-stream'),\n    defer = require('promise-defer');\n\nexports.fn.filter = function (fn) {\n    return this.append(map((data, next) => {\n        var deferred = defer();\n        deferred.promise.then((cont) => {\n            if (cont) next(null, data);\n            else next();\n        }, next);\n\n        try {\n            var retval = fn.call({\n                promise: deferred\n            }, data);\n            if (retval !== undefined) deferred.resolve(retval);\n        } catch (err) {\n            deferred.reject(err);\n        }\n    }));\n};\n","/**\n * lib/array/forEach.js - data-stream\n * Iterate over each stream item.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.forEach = function (fn) {\n    return this.map((data) => {\n        fn(data);\n        return data;\n    });\n};\n","/**\n * lib/array/join.js - data-stream\n * Join all data with a seperator.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.join = function (seperator) {\n    seperator = seperator || ',';\n    var first = true;\n    return this.map((data) => {\n        if (first) {\n            first = false;\n            return data;\n        }\n\n        return seperator + data;\n    });\n};\n","/**\n * lib/array/map.js - data-stream\n * Iterate over and change all data passing through stream.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar map = require('map-stream'),\n    defer = require('promise-defer');\n\nexports.fn.map = function (fn) {\n    return this.append(map((data, next) => {\n        var deferred = defer();\n        deferred.promise.then((newData) => next(null, newData), next);\n\n        try {\n            var retval = fn.call({\n                promise: deferred\n            }, data);\n            if (retval) deferred.resolve(retval);\n        } catch (err) {\n            deferred.reject(err);\n        }\n    }));\n};\n","/**\n * lib/array/reduce.js - data-stream\n * Reduce data to a single data point.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar map = require('map-stream');\n\nexports.fn.reduce = function (fn, initial) {\n    var value = initial | 0;\n    return this.append(map((data, next) => {\n        value = fn(value, data);\n        next(null, value);\n    }));\n};\n","/**\n * lib/math/average.js - data-stream\n * Calculate and pass down an average of values.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.average = function () {\n    var sum = 0,\n        n = 0;\n\n    return this.map((num) => {\n        sum += num;\n        n += 1;\n\n        return sum / n;\n    });\n};\n","/**\n * lib/probability.js - data-stream\n * Create probability mappings for data.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.probability = function () {\n    var freq = {},\n        events = 0,\n        compare = {\n            '>': (a, b) => a > b,\n            '<': (a, b) => a < b,\n            '=': (a, b) => a === b,\n            '>=': (a, b) => a >= b,\n            '<=': (a, b) => a <= b\n        };\n\n    return this.map((data) => {\n        data = String(data);\n        if (!freq[data]) freq[data] = 0;\n\n        freq[data] += 1;\n        events += 1;\n\n        return function (key) {\n            if (compare.hasOwnProperty(key[0])) {\n                var sign = key[0],\n                    sum = 0;\n\n                key = key.substr(1);\n                if (key[0] === '=') {\n                    sign += '=';\n                    key = key.substr(1);\n                }\n\n                key = parseFloat(key);\n                for (var event in freq) {\n                    if (freq.hasOwnProperty(event) && compare[sign](parseFloat(event), key)) {\n                        sum += freq[event];\n                    }\n                }\n\n                return sum / events;\n            }\n\n            return freq[String(key)] / events;\n        };\n    });\n};\n","/**\n * lib/math/sum.js - data-stream\n * Pass an updated sum of data down the stream.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\nexports.fn.sum = function () {\n    return this.reduce((prev, next) => prev + parseFloat(next), 0);\n};\n","/**\n * lib/utils/debounce.js - data-stream\n * Debounce stream's passthrough.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar debounce = require('debounce-stream');\nexports.fn.debounce = function (timeout) {\n    return this.append(debounce(timeout))\n};\n","/**\n * lib/utils/distinct.js - data-stream\n * Only allow distinct values through the stream.\n *\n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.distinct = function () {\n    var prev = null;\n    return this.filter(function (data) {\n        var pass = data !== prev;\n        prev = data;\n        return pass;\n    });\n};\n","/**\n * lib/utils/json.js - data-stream\n * Parse all incoming data to JSON.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.json = function () {\n    return this.map((data) => JSON.parse(data));\n};\n","/**\n * lib/utils/pluck.js - data-stream\n * Pluck out specific values from data.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar pluck = require('pluck');\nexports.fn.pluck = function (key) {\n    return this.map(pluck(key));\n};\n","/**\n * lib/utils/stdout.js - data-stream\n * Make incoming data appropriate for logging.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.stdout = function (seperator) {\n    return this.stringify()\n        .join(seperator || '\\n')\n        .pipe(process.stdout);\n};\n","/**\n * lib/utils/stringify.js - data-stream\n * Stringify all incoming data.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nexports.fn.stringify = function () {\n    return this.map((data) => typeof data === 'object' ? JSON.stringify(data) : String(data));\n};\n","/**\n * lib/utils/take.js - data-stream\n * Collect up n datums and emit together.\n * \n * data-stream: powerful data manipulation with node.js streams.\n * Copyright (C) 2015 Karim Alibhai.\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n **/\n\n'use strict';\n\nvar map = require('map-stream');\n\nexports.fn.take = function (n) {\n    var buffer = [];\n\n    return this.append(map((datum, next) => {\n        // collect up the datums in a buffer\n        buffer.push(datum);\n\n        // if we have reached the ideal length,\n        // we emit and reset the buffer\n        if (buffer.length === n) {\n            var tmp = buffer;\n            buffer = [];\n\n            // emit the buffer we collected up\n            next(null, tmp);\n        } else {\n            // if we haven't reached the buffer length yet,\n            // we should filter the datum out\n            next();\n        }\n    }));\n};\n"],"sourceRoot":"/source/"}